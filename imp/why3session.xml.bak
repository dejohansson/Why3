<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="0" name="Alt-Ergo" version="2.2.0" timelimit="10" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.7.1" alternative="counterexamples" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="CVC4" version="1.6" alternative="counterexamples" timelimit="10" steplimit="0" memlimit="2000"/>
<file name="../state.mlw" proved="true">
<theory name="State" proved="true">
 <goal name="VC const" expl="VC for const" proved="true">
 <proof prover="0" memlimit="2000"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="VC get">
 <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC mixfix []">
 <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC set">
 <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
 <goal name="VC mixfix [&lt;-]">
 <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="1"/></proof>
 </goal>
</theory>
<theory name="Reg" proved="true">
 <goal name="VC const" expl="VC for const" proved="true">
 <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="2"/></proof>
 </goal>
 <goal name="VC write">
 <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
 <goal name="VC read">
 <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="0"/></proof>
 </goal>
</theory>
</file>
<file name="../specs.mlw">
<theory name="VM_instr_spec">
 <goal name="VC ifunf" expl="VC for ifunf">
 <transf name="split_goal_right" >
  <goal name="VC ifunf.0" expl="precondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC ifunf.1" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.02" steps="154"/></proof>
  </goal>
  <goal name="VC ifunf.2" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.02" steps="154"/></proof>
  </goal>
  <goal name="VC ifunf.3" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.02" steps="154"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC iimmf" expl="VC for iimmf">
 <transf name="split_vc" >
  <goal name="VC iimmf.0" expl="precondition">
  <proof prover="2" memlimit="2000" obsolete="true"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="VC iimmf.1" expl="precondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.26" steps="453"/></proof>
  </goal>
  <goal name="VC iimmf.2" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.06" steps="164"/></proof>
  </goal>
  <goal name="VC iimmf.3" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.06" steps="164"/></proof>
  </goal>
  <goal name="VC iimmf.4" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.24" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC iloadf" expl="VC for iloadf">
 <transf name="split_vc" >
  <goal name="VC iloadf.0" expl="precondition">
  <proof prover="2" timelimit="10" obsolete="true"><result status="valid" time="0.50"/></proof>
  </goal>
  <goal name="VC iloadf.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.22" steps="453"/></proof>
  </goal>
  <goal name="VC iloadf.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="164"/></proof>
  </goal>
  <goal name="VC iloadf.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="164"/></proof>
  </goal>
  <goal name="VC iloadf.4" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.23" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC istoref" expl="VC for istoref">
 <transf name="split_vc" >
  <goal name="VC istoref.0" expl="precondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.38"/></proof>
  </goal>
  <goal name="VC istoref.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.25" steps="453"/></proof>
  </goal>
  <goal name="VC istoref.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="164"/></proof>
  </goal>
  <goal name="VC istoref.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="164"/></proof>
  </goal>
  <goal name="VC istoref.4" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.21" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC ipushf" expl="VC for ipushf">
 <transf name="split_vc" >
  <goal name="VC ipushf.0" expl="precondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="VC ipushf.1" expl="precondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.26" steps="451"/></proof>
  </goal>
  <goal name="VC ipushf.2" expl="postcondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.11" steps="164"/></proof>
  </goal>
  <goal name="VC ipushf.3" expl="postcondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.09" steps="164"/></proof>
  </goal>
  <goal name="VC ipushf.4" expl="postcondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.24" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC ipopf" expl="VC for ipopf">
 <transf name="split_vc" >
  <goal name="VC ipopf.0" expl="precondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.33"/></proof>
  </goal>
  <goal name="VC ipopf.1" expl="precondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.31" steps="520"/></proof>
  </goal>
  <goal name="VC ipopf.2" expl="postcondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.07" steps="164"/></proof>
  </goal>
  <goal name="VC ipopf.3" expl="postcondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.09" steps="164"/></proof>
  </goal>
  <goal name="VC ipopf.4" expl="postcondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.23" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC iaddrf" expl="VC for iaddrf">
 <transf name="split_goal_right" >
  <goal name="VC iaddrf.0" expl="precondition">
  <transf name="compute_specified" >
   <goal name="VC iaddrf.0.0" expl="precondition">
   <transf name="introduce_premises" >
    <goal name="VC iaddrf.0.0.0" expl="precondition">
    <proof prover="2" timelimit="10" obsolete="true"><result status="timeout" time="10.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC iaddrf.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.27" steps="455"/></proof>
  </goal>
  <goal name="VC iaddrf.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="164"/></proof>
  </goal>
  <goal name="VC iaddrf.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="164"/></proof>
  </goal>
  <goal name="VC iaddrf.4" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.10" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC iaddurf" expl="VC for iaddurf">
 <transf name="split_vc" >
  <goal name="VC iaddurf.0" expl="precondition">
  <proof prover="4" memlimit="1000" obsolete="true"><result status="valid" time="0.65"/></proof>
  </goal>
  <goal name="VC iaddurf.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.26" steps="455"/></proof>
  </goal>
  <goal name="VC iaddurf.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="164"/></proof>
  </goal>
  <goal name="VC iaddurf.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="164"/></proof>
  </goal>
  <goal name="VC iaddurf.4" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.10" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC isubrf" expl="VC for isubrf">
 <transf name="split_goal_right" >
  <goal name="VC isubrf.0" expl="precondition">
  <transf name="compute_specified" >
   <goal name="VC isubrf.0.0" expl="precondition">
   <transf name="introduce_premises" >
    <goal name="VC isubrf.0.0.0" expl="precondition">
    <proof prover="2" timelimit="10" obsolete="true"><result status="timeout" time="10.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC isubrf.1" expl="precondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.22" steps="455"/></proof>
  </goal>
  <goal name="VC isubrf.2" expl="postcondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.11" steps="164"/></proof>
  </goal>
  <goal name="VC isubrf.3" expl="postcondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.09" steps="164"/></proof>
  </goal>
  <goal name="VC isubrf.4" expl="postcondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.23" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC ibeqrf" expl="VC for ibeqrf">
 <transf name="split_goal_right" >
  <goal name="VC ibeqrf.0" expl="precondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.47"/></proof>
  </goal>
  <goal name="VC ibeqrf.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.25" steps="477"/></proof>
  </goal>
  <goal name="VC ibeqrf.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="164"/></proof>
  </goal>
  <goal name="VC ibeqrf.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="164"/></proof>
  </goal>
  <goal name="VC ibeqrf.4" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.24" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC ibnerf" expl="VC for ibnerf">
 <transf name="split_goal_right" >
  <goal name="VC ibnerf.0" expl="precondition">
  <proof prover="4" memlimit="1000" obsolete="true"><result status="valid" time="0.36"/></proof>
  </goal>
  <goal name="VC ibnerf.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.29" steps="479"/></proof>
  </goal>
  <goal name="VC ibnerf.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="164"/></proof>
  </goal>
  <goal name="VC ibnerf.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="164"/></proof>
  </goal>
  <goal name="VC ibnerf.4" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.24" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC iblerf" expl="VC for iblerf">
 <transf name="split_goal_right" >
  <goal name="VC iblerf.0" expl="precondition">
  <proof prover="4" memlimit="1000" obsolete="true"><result status="valid" time="0.46"/></proof>
  </goal>
  <goal name="VC iblerf.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.25" steps="478"/></proof>
  </goal>
  <goal name="VC iblerf.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="164"/></proof>
  </goal>
  <goal name="VC iblerf.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.06" steps="164"/></proof>
  </goal>
  <goal name="VC iblerf.4" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.11" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC ibgtrf" expl="VC for ibgtrf">
 <transf name="split_goal_right" >
  <goal name="VC ibgtrf.0" expl="precondition">
  <proof prover="4" memlimit="1000" obsolete="true"><result status="valid" time="0.48"/></proof>
  </goal>
  <goal name="VC ibgtrf.1" expl="precondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.25" steps="480"/></proof>
  </goal>
  <goal name="VC ibgtrf.2" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.05" steps="164"/></proof>
  </goal>
  <goal name="VC ibgtrf.3" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.07" steps="164"/></proof>
  </goal>
  <goal name="VC ibgtrf.4" expl="postcondition">
  <proof prover="0" obsolete="true"><result status="valid" time="0.24" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC iconstf" expl="VC for iconstf">
 <transf name="split_goal_right" >
  <goal name="VC iconstf.0" expl="precondition">
  <proof prover="2" memlimit="2000" obsolete="true"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC iconstf.1" expl="precondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.19" steps="451"/></proof>
  </goal>
  <goal name="VC iconstf.2" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.14" steps="164"/></proof>
  </goal>
  <goal name="VC iconstf.3" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.13" steps="164"/></proof>
  </goal>
  <goal name="VC iconstf.4" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.26" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC ivarf" expl="VC for ivarf">
 <transf name="split_goal_right" >
  <goal name="VC ivarf.0" expl="precondition">
  <proof prover="2" memlimit="2000" obsolete="true"><result status="valid" time="0.02"/></proof>
  </goal>
  <goal name="VC ivarf.1" expl="precondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.28" steps="451"/></proof>
  </goal>
  <goal name="VC ivarf.2" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.14" steps="164"/></proof>
  </goal>
  <goal name="VC ivarf.3" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.14" steps="164"/></proof>
  </goal>
  <goal name="VC ivarf.4" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.17" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC create_binop" expl="VC for create_binop">
 <transf name="split_goal_right" >
  <goal name="VC create_binop.0" expl="precondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.78"/></proof>
  </goal>
  <goal name="VC create_binop.1" expl="precondition">
  <transf name="compute_specified" >
   <goal name="VC create_binop.1.0" expl="precondition">
   <transf name="introduce_premises" >
    <goal name="VC create_binop.1.0.0" expl="precondition">
    <transf name="compute_specified" >
     <goal name="VC create_binop.1.0.0.0" expl="precondition">
     <proof prover="4" memlimit="1000" obsolete="true"><result status="valid" time="0.51"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC create_binop.2" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.13" steps="164"/></proof>
  </goal>
  <goal name="VC create_binop.3" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.14" steps="164"/></proof>
  </goal>
  <goal name="VC create_binop.4" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.13" steps="164"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC iaddf" expl="VC for iaddf">
 <transf name="split_goal_right" >
  <goal name="VC iaddf.0" expl="precondition">
  <transf name="compute_specified" >
   <goal name="VC iaddf.0.0" expl="precondition">
   <transf name="introduce_premises" >
    <goal name="VC iaddf.0.0.0" expl="precondition">
    <proof prover="2" memlimit="2000" obsolete="true"><result status="valid" time="0.05"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC iaddf.1" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.06" steps="154"/></proof>
  </goal>
  <goal name="VC iaddf.2" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.06" steps="154"/></proof>
  </goal>
  <goal name="VC iaddf.3" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.16" steps="156"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC iadduf" expl="VC for iadduf">
 <transf name="split_goal_right" >
  <goal name="VC iadduf.0" expl="precondition">
  <proof prover="2" timelimit="10" obsolete="true"><result status="valid" time="0.03"/></proof>
  </goal>
  <goal name="VC iadduf.1" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.05" steps="154"/></proof>
  </goal>
  <goal name="VC iadduf.2" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.05" steps="154"/></proof>
  </goal>
  <goal name="VC iadduf.3" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.18" steps="156"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC isubf" expl="VC for isubf">
 <transf name="split_goal_right" >
  <goal name="VC isubf.0" expl="precondition">
  <transf name="compute_specified" >
   <goal name="VC isubf.0.0" expl="precondition">
   <transf name="introduce_premises" >
    <goal name="VC isubf.0.0.0" expl="precondition">
    <proof prover="2" memlimit="2000" obsolete="true"><result status="valid" time="0.05"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC isubf.1" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.06" steps="154"/></proof>
  </goal>
  <goal name="VC isubf.2" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.06" steps="154"/></proof>
  </goal>
  <goal name="VC isubf.3" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.21" steps="156"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC isubuf" expl="VC for isubuf">
 <proof prover="0" timelimit="5" obsolete="true"><result status="valid" time="0.19" steps="516"/></proof>
 </goal>
 <goal name="VC inil" expl="VC for inil">
 <transf name="split_goal_right" >
  <goal name="VC inil.0" expl="precondition">
  <proof prover="2" obsolete="true"><result status="timeout" time="5.00"/></proof>
  </goal>
  <goal name="VC inil.1" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.15" steps="154"/></proof>
  </goal>
  <goal name="VC inil.2" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.14" steps="154"/></proof>
  </goal>
  <goal name="VC inil.3" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.13" steps="156"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC ibranchf" expl="VC for ibranchf">
 <transf name="split_vc" >
  <goal name="VC ibranchf.0" expl="precondition">
  <proof prover="2" memlimit="2000" obsolete="true"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC ibranchf.1" expl="precondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.28" steps="455"/></proof>
  </goal>
  <goal name="VC ibranchf.2" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.08" steps="164"/></proof>
  </goal>
  <goal name="VC ibranchf.3" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.06" steps="164"/></proof>
  </goal>
  <goal name="VC ibranchf.4" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.20" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC create_cjump" expl="VC for create_cjump">
 <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.70" steps="1092"/></proof>
 </goal>
 <goal name="VC ibeqf" expl="VC for ibeqf">
 <proof prover="2" memlimit="2000" obsolete="true"><result status="valid" time="0.07"/></proof>
 </goal>
 <goal name="VC ibnef" expl="VC for ibnef">
 <proof prover="2" memlimit="2000" obsolete="true"><result status="valid" time="0.07"/></proof>
 </goal>
 <goal name="VC iblef" expl="VC for iblef">
 <proof prover="2" memlimit="2000" obsolete="true"><result status="valid" time="0.06"/></proof>
 </goal>
 <goal name="VC ibgtf" expl="VC for ibgtf">
 <proof prover="2" memlimit="2000" obsolete="true"><result status="valid" time="0.06"/></proof>
 </goal>
 <goal name="VC isetvarf" expl="VC for isetvarf">
 <transf name="split_vc" >
  <goal name="VC isetvarf.0" expl="precondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.51"/></proof>
  </goal>
  <goal name="VC isetvarf.1" expl="precondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.29" steps="554"/></proof>
  </goal>
  <goal name="VC isetvarf.2" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.14" steps="164"/></proof>
  </goal>
  <goal name="VC isetvarf.3" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.13" steps="164"/></proof>
  </goal>
  <goal name="VC isetvarf.4" expl="postcondition">
  <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.16" steps="392"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
<file name="../vm.mlw">
<theory name="ReflTransClosure" proved="true">
 <goal name="transition_star_one" proved="true">
 <proof prover="2"><result status="valid" time="0.01"/></proof>
 </goal>
 <goal name="transition_star_transitive" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="transition_star_transitive.0" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="transition_star_transitive.1" proved="true">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.00" steps="16"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Vm">
 <goal name="codeseq_at_app_right">
 <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.13" steps="407"/></proof>
 </goal>
 <goal name="codeseq_at_app_left">
 <proof prover="0" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="0.13" steps="460"/></proof>
 </goal>
 <goal name="list_app_eq_nil">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.05" steps="403"/></proof>
 </goal>
 <goal name="list_app_eq_left_cons">
 <transf name="induction_ty_lex" >
  <goal name="list_app_eq_left_cons.0">
  <transf name="split_goal_right" >
   <goal name="list_app_eq_left_cons.0.0">
   <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.17" steps="392"/></proof>
   </goal>
   <goal name="list_app_eq_left_cons.0.1">
   <transf name="introduce_premises" >
    <goal name="list_app_eq_left_cons.0.1.0">
    <transf name="subst_all" >
     <goal name="list_app_eq_left_cons.0.1.0.0">
     <proof prover="4" obsolete="true"><result status="valid" time="0.13"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="list_app_eq_last">
 <transf name="induction_ty_lex" >
  <goal name="list_app_eq_last.0">
  <transf name="split_goal_right" >
   <goal name="list_app_eq_last.0.0">
   <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.16" steps="405"/></proof>
   </goal>
   <goal name="list_app_eq_last.0.1">
   <transf name="introduce_premises" >
    <goal name="list_app_eq_last.0.1.0">
    <transf name="subst_all" >
     <goal name="list_app_eq_last.0.1.0.0">
     <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.05" steps="451"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="list_app_eq_left">
 <transf name="induction_ty_lex" >
  <goal name="list_app_eq_left.0">
  <transf name="split_goal_right" >
   <goal name="list_app_eq_left.0.0">
   <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.04" steps="154"/></proof>
   </goal>
   <goal name="list_app_eq_left.0.1">
   <transf name="introduce_premises" >
    <goal name="list_app_eq_left.0.1.0">
    <transf name="subst_all" >
     <goal name="list_app_eq_left.0.1.0.0">
     <proof prover="4" obsolete="true"><result status="valid" time="0.46"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="codeseq_at_right">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.06" steps="432"/></proof>
 </goal>
 <goal name="trans_deterministic_aux">
 <transf name="inversion_pr" >
  <goal name="trans_deterministic_aux.0">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.23" steps="3225"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.1">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.25" steps="3225"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.2">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.23" steps="3227"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.3">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.35" steps="3495"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.4">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.25" steps="3240"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.5">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.25" steps="3249"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.6">
  <proof prover="0" obsolete="true"><result status="valid" time="1.47" steps="4083"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.7">
  </goal>
  <goal name="trans_deterministic_aux.8">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.27" steps="3241"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.9">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="2.30" steps="3630"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.10">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.77" steps="3633"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.11">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="2.63" steps="3881"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.12">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.92" steps="3855"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.13">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.30" steps="3247"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.14">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.26" steps="3247"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.15">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.25" steps="3239"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.16">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.84" steps="3305"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.17">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.40" steps="3934"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.18">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.32" steps="3084"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.19">
  </goal>
  <goal name="trans_deterministic_aux.20">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="2.00" steps="3751"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.21">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.57" steps="3614"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.22">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.69" steps="3738"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.23">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.94" steps="3800"/></proof>
  </goal>
  <goal name="trans_deterministic_aux.24">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="2.09" steps="3668"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="trans_deterministic">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.10" steps="376"/></proof>
 </goal>
 <goal name="trans_deterministic_star">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.10" steps="152"/></proof>
 </goal>
 <goal name="VC ibranch">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.01" steps="146"/></proof>
 </goal>
 <goal name="VC iaddur">
 <proof prover="0" obsolete="true"><result status="valid" time="0.03" steps="146"/></proof>
 </goal>
 <goal name="VC ibgt">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="146"/></proof>
 </goal>
 <goal name="VC push">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="146"/></proof>
 </goal>
 <goal name="VC ipopr">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.03" steps="146"/></proof>
 </goal>
 <goal name="VC iimm">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.02" steps="146"/></proof>
 </goal>
 <goal name="VC ibgtr">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.02" steps="146"/></proof>
 </goal>
 <goal name="VC ihalt">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="146"/></proof>
 </goal>
 <goal name="VC isubr">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.02" steps="146"/></proof>
 </goal>
 <goal name="VC isub">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="146"/></proof>
 </goal>
 <goal name="VC ibler">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.02" steps="146"/></proof>
 </goal>
 <goal name="VC ipushr">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.03" steps="146"/></proof>
 </goal>
 <goal name="VC ivar">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="146"/></proof>
 </goal>
 <goal name="VC iload">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.02" steps="146"/></proof>
 </goal>
 <goal name="VC iaddu">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.01" steps="146"/></proof>
 </goal>
 <goal name="VC ibeqr">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.02" steps="146"/></proof>
 </goal>
 <goal name="VC ibeq">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="146"/></proof>
 </goal>
 <goal name="VC iadd">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="146"/></proof>
 </goal>
 <goal name="VC ibner">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.02" steps="146"/></proof>
 </goal>
 <goal name="VC ibne">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="146"/></proof>
 </goal>
 <goal name="VC iconst">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="146"/></proof>
 </goal>
 <goal name="VC istore">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.02" steps="146"/></proof>
 </goal>
 <goal name="VC iaddr">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.02" steps="146"/></proof>
 </goal>
 <goal name="VC ible">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.01" steps="146"/></proof>
 </goal>
 <goal name="VC isetvar">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.00" steps="146"/></proof>
 </goal>
</theory>
</file>
<file name="../logic.mlw">
<theory name="Compiler_logic">
 <goal name="VC hl" expl="VC for hl">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.12" steps="148"/></proof>
 </goal>
 <goal name="VC wp" expl="VC for wp">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.12" steps="148"/></proof>
 </goal>
 <goal name="seq_wp_lemma">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.13" steps="148"/></proof>
 </goal>
 <goal name="VC infix --" expl="VC for infix --">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.37" steps="606"/></proof>
 </goal>
 <goal name="fork_wp_lemma">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.12" steps="365"/></proof>
 </goal>
 <goal name="VC infix %" expl="VC for infix %">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.15" steps="423"/></proof>
 </goal>
 <goal name="towp_wp_lemma">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.14" steps="385"/></proof>
 </goal>
 <goal name="VC prefix $" expl="VC for prefix $">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.13" steps="398"/></proof>
 </goal>
 <goal name="VC hoare" expl="VC for hoare">
 <proof prover="2" obsolete="true"><result status="valid" time="0.03"/></proof>
 </goal>
 <goal name="pconj_lemma">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.01" steps="149"/></proof>
 </goal>
 <goal name="loop_wp_lemma">
 <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="1.36" steps="2024"/></proof>
 <proof prover="2" memlimit="2000" obsolete="true"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="VC make_loop" expl="VC for make_loop">
 <transf name="split_goal_right" >
  <goal name="VC make_loop.0" expl="assertion">
  <transf name="induction_pr" >
   <goal name="VC make_loop.0.0" expl="assertion">
   <proof prover="2" obsolete="true"><result status="valid" time="0.04"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC make_loop.1" expl="precondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.12" steps="390"/></proof>
  </goal>
  <goal name="VC make_loop.2" expl="postcondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.02" steps="150"/></proof>
  </goal>
  <goal name="VC make_loop.3" expl="postcondition">
  <proof prover="0" memlimit="2000" obsolete="true"><result status="valid" time="0.02" steps="150"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
<file name="../compiler.mlw" proved="true">
<theory name="Compile_com">
 <goal name="loop_variant_lemma">
 <proof prover="0"><result status="valid" time="0.29" steps="434"/></proof>
 </goal>
 <goal name="loop_variant_acc">
 <transf name="split_goal_right" >
  <goal name="loop_variant_acc.0">
  <proof prover="0"><result status="valid" time="0.25" steps="494"/></proof>
  </goal>
  <goal name="loop_variant_acc.1">
  <proof prover="2" timelimit="10" obsolete="true"><result status="timeout" time="16.00"/></proof>
  </goal>
  <goal name="loop_variant_acc.2">
  <transf name="induction_pr" >
   <goal name="loop_variant_acc.2.0">
   <proof prover="0"><result status="valid" time="0.08" steps="164"/></proof>
   </goal>
   <goal name="loop_variant_acc.2.1">
   <proof prover="0"><result status="valid" time="0.22" steps="164"/></proof>
   </goal>
   <goal name="loop_variant_acc.2.2">
   <proof prover="0"><result status="valid" time="0.24" steps="170"/></proof>
   </goal>
   <goal name="loop_variant_acc.2.3">
   <proof prover="0"><result status="valid" time="0.24" steps="169"/></proof>
   </goal>
   <goal name="loop_variant_acc.2.4">
   <proof prover="0"><result status="valid" time="0.23" steps="169"/></proof>
   </goal>
   <goal name="loop_variant_acc.2.5">
   <transf name="simplify_trivial_quantification_in_goal" >
    <goal name="loop_variant_acc.2.5.0">
    <transf name="compute_specified" >
     <goal name="loop_variant_acc.2.5.0.0">
     <transf name="introduce_premises" >
      <goal name="loop_variant_acc.2.5.0.0.0">
      <transf name="apply" arg1="Acc">
       <goal name="loop_variant_acc.2.5.0.0.0.0">
       <transf name="compute_specified" >
        <goal name="loop_variant_acc.2.5.0.0.0.0.0">
        <transf name="introduce_premises" >
         <goal name="loop_variant_acc.2.5.0.0.0.0.0.0">
         <proof prover="2" timelimit="10" obsolete="true"><result status="timeout" time="10.00"/></proof>
         </goal>
        </transf>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="loop_variant_acc.2.6">
   <transf name="simplify_trivial_quantification_in_goal" >
    <goal name="loop_variant_acc.2.6.0">
    <proof prover="0" memlimit="2000"><result status="valid" time="0.17" steps="554"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC compile_com">
 <transf name="split_goal_right" >
  <goal name="VC compile_com.0">
  <proof prover="0"><result status="valid" time="0.26" steps="440"/></proof>
  </goal>
  <goal name="VC compile_com.1">
  <proof prover="0"><result status="valid" time="0.17" steps="481"/></proof>
  </goal>
  <goal name="VC compile_com.2">
  <proof prover="0"><result status="valid" time="0.24" steps="446"/></proof>
  </goal>
  <goal name="VC compile_com.3">
  <proof prover="0"><result status="valid" time="0.17" steps="495"/></proof>
  </goal>
  <goal name="VC compile_com.4">
  <proof prover="0"><result status="valid" time="0.32" steps="441"/></proof>
  </goal>
  <goal name="VC compile_com.5">
  <transf name="split_goal_right" >
   <goal name="VC compile_com.5.0">
   <transf name="compute_specified" >
    <goal name="VC compile_com.5.0.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_com.5.0.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_com.5.0.0.0.0">
      <proof prover="0"><result status="valid" time="0.26" steps="412"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_com.5.1">
   <transf name="compute_specified" >
    <goal name="VC compile_com.5.1.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_com.5.1.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_com.5.1.0.0.0">
      <proof prover="0"><result status="valid" time="0.39" steps="584"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_com.5.2">
   <transf name="compute_specified" >
    <goal name="VC compile_com.5.2.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_com.5.2.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_com.5.2.0.0.0">
      <proof prover="0"><result status="valid" time="0.89" steps="1931"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_com.5.3">
   <transf name="compute_specified" >
    <goal name="VC compile_com.5.3.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_com.5.3.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_com.5.3.0.0.0">
      <proof prover="0"><result status="valid" time="1.07" steps="1851"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_com.5.4">
   <transf name="compute_specified" >
    <goal name="VC compile_com.5.4.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_com.5.4.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_com.5.4.0.0.0">
      <transf name="split_goal_right" >
       <goal name="VC compile_com.5.4.0.0.0.0">
       <proof prover="0"><result status="valid" time="0.22" steps="200"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.1">
       <proof prover="0"><result status="valid" time="0.20" steps="208"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.2">
       <proof prover="0"><result status="valid" time="0.20" steps="208"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.3">
       <proof prover="0"><result status="valid" time="0.19" steps="208"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.4">
       <proof prover="0"><result status="valid" time="0.27" steps="488"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.5">
       <proof prover="0"><result status="valid" time="0.33" steps="523"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.6">
       <proof prover="0"><result status="valid" time="0.14" steps="254"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.7">
       <proof prover="0"><result status="valid" time="0.24" steps="272"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.8">
       <proof prover="0"><result status="valid" time="0.24" steps="272"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.9">
       <proof prover="0"><result status="valid" time="0.23" steps="272"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.10">
       <proof prover="0"><result status="valid" time="0.23" steps="270"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.11">
       <proof prover="0"><result status="valid" time="0.23" steps="292"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.12">
       <proof prover="0"><result status="valid" time="0.23" steps="290"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.13">
       <proof prover="0"><result status="valid" time="0.25" steps="272"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.14">
       <proof prover="0"><result status="valid" time="0.81" steps="1440"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.15">
       <proof prover="0"><result status="valid" time="0.23" steps="296"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.16">
       <proof prover="0"><result status="valid" time="0.29" steps="309"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.17">
       <proof prover="0"><result status="valid" time="0.33" steps="309"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.18">
       <proof prover="0"><result status="valid" time="0.38" steps="309"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.19">
       <proof prover="0"><result status="valid" time="7.77" steps="15715"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.20">
       <proof prover="0"><result status="valid" time="0.38" steps="329"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.21">
       <proof prover="0"><result status="valid" time="0.15" steps="324"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.22">
       <proof prover="0"><result status="valid" time="0.11" steps="252"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.23">
       <proof prover="0"><result status="valid" time="0.11" steps="270"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.24">
       <proof prover="0"><result status="valid" time="0.11" steps="270"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.25">
       <proof prover="0"><result status="valid" time="1.33" steps="2895"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.26">
       <proof prover="0"><result status="valid" time="0.23" steps="270"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.27">
       <proof prover="0"><result status="valid" time="0.16" steps="270"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.28">
       <proof prover="0"><result status="valid" time="0.15" steps="268"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.29">
       <proof prover="0"><result status="valid" time="0.13" steps="294"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.30">
       <proof prover="0"><result status="valid" time="0.18" steps="304"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.31">
       <proof prover="0"><result status="valid" time="0.17" steps="304"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.32">
       <proof prover="0"><result status="valid" time="0.27" steps="304"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.33">
       <proof prover="0"><result status="valid" time="0.27" steps="304"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC compile_com.6">
  <proof prover="0"><result status="valid" time="0.22" steps="160"/></proof>
  </goal>
  <goal name="VC compile_com.7">
  <proof prover="0"><result status="valid" time="0.21" steps="160"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compile_com_natural">
 <transf name="split_goal_right" >
  <goal name="VC compile_com_natural.0">
  <transf name="compute_specified" >
   <goal name="VC compile_com_natural.0.0">
   <transf name="introduce_premises" >
    <goal name="VC compile_com_natural.0.0.0">
    <transf name="compute_specified" >
     <goal name="VC compile_com_natural.0.0.0.0">
     <proof prover="0" memlimit="2000"><result status="valid" time="0.28" steps="420"/></proof>
     <proof prover="2" timelimit="10"><result status="valid" time="0.10"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC compile_com_natural.1">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.24" steps="503"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compile_program">
 <transf name="split_goal_right" >
  <goal name="VC compile_program.0">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.13" steps="160"/></proof>
  </goal>
  <goal name="VC compile_program.1">
  <proof prover="2" timelimit="10" memlimit="2000" obsolete="true"><result status="timeout" time="10.00"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Compile_aexpr">
 <goal name="VC compile_aexpr">
 <transf name="split_goal_right" >
  <goal name="VC compile_aexpr.0">
  <proof prover="0"><result status="valid" time="0.22" steps="508"/></proof>
  </goal>
  <goal name="VC compile_aexpr.1">
  <proof prover="0"><result status="valid" time="0.33" steps="553"/></proof>
  </goal>
  <goal name="VC compile_aexpr.2">
  <proof prover="0"><result status="valid" time="0.24" steps="509"/></proof>
  </goal>
  <goal name="VC compile_aexpr.3">
  <proof prover="0"><result status="valid" time="0.24" steps="554"/></proof>
  </goal>
  <goal name="VC compile_aexpr.4">
  <proof prover="0"><result status="valid" time="0.31" steps="508"/></proof>
  </goal>
  <goal name="VC compile_aexpr.5">
  <proof prover="0"><result status="valid" time="0.21" steps="553"/></proof>
  </goal>
  <goal name="VC compile_aexpr.6">
  <proof prover="0" timelimit="5"><result status="valid" time="0.18" steps="509"/></proof>
  </goal>
  <goal name="VC compile_aexpr.7">
  <proof prover="0" timelimit="5"><result status="valid" time="0.21" steps="554"/></proof>
  </goal>
  <goal name="VC compile_aexpr.8">
  <transf name="split_goal_right" >
   <goal name="VC compile_aexpr.8.0">
   <transf name="compute_specified" >
    <goal name="VC compile_aexpr.8.0.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_aexpr.8.0.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_aexpr.8.0.0.0.0">
      <proof prover="0"><result status="valid" time="0.32" steps="447"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_aexpr.8.1">
   <transf name="compute_specified" >
    <goal name="VC compile_aexpr.8.1.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_aexpr.8.1.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_aexpr.8.1.0.0.0">
      <proof prover="0"><result status="valid" time="0.24" steps="447"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_aexpr.8.2">
   <transf name="compute_specified" >
    <goal name="VC compile_aexpr.8.2.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_aexpr.8.2.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_aexpr.8.2.0.0.0">
      <proof prover="0"><result status="valid" time="0.30" steps="647"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_aexpr.8.3">
   <transf name="compute_specified" >
    <goal name="VC compile_aexpr.8.3.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_aexpr.8.3.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_aexpr.8.3.0.0.0">
      <proof prover="0"><result status="valid" time="0.31" steps="698"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_aexpr.8.4">
   <transf name="compute_specified" >
    <goal name="VC compile_aexpr.8.4.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_aexpr.8.4.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_aexpr.8.4.0.0.0">
      <proof prover="0"><result status="valid" time="0.37" steps="647"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_aexpr.8.5">
   <transf name="compute_specified" >
    <goal name="VC compile_aexpr.8.5.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_aexpr.8.5.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_aexpr.8.5.0.0.0">
      <proof prover="0" timelimit="5"><result status="valid" time="0.27" steps="698"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC compile_aexpr.9">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.11" steps="160"/></proof>
  </goal>
  <goal name="VC compile_aexpr.10">
  <proof prover="0" timelimit="5" memlimit="2000"><result status="valid" time="0.10" steps="160"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compile_aexpr_natural">
 <proof prover="0" memlimit="2000"><result status="valid" time="1.31" steps="843"/></proof>
 </goal>
</theory>
<theory name="Compile_bexpr_reg">
 <goal name="VC compile_bexpr">
 <transf name="split_goal_right" >
  <goal name="VC compile_bexpr.0">
  <proof prover="0"><result status="valid" time="0.31" steps="436"/></proof>
  </goal>
  <goal name="VC compile_bexpr.1">
  <proof prover="0"><result status="valid" time="0.26" steps="442"/></proof>
  </goal>
  <goal name="VC compile_bexpr.2">
  <proof prover="0"><result status="valid" time="0.24" steps="521"/></proof>
  </goal>
  <goal name="VC compile_bexpr.3">
  <transf name="split_goal_right" >
   <goal name="VC compile_bexpr.3.0">
   <transf name="split_goal_right" >
    <goal name="VC compile_bexpr.3.0.0">
    <transf name="compute_specified" >
     <goal name="VC compile_bexpr.3.0.0.0">
     <transf name="introduce_premises" >
      <goal name="VC compile_bexpr.3.0.0.0.0">
      <transf name="compute_specified" >
       <goal name="VC compile_bexpr.3.0.0.0.0.0">
       <proof prover="0"><result status="valid" time="0.15" steps="491"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC compile_bexpr.3.0.1">
    <transf name="compute_specified" >
     <goal name="VC compile_bexpr.3.0.1.0">
     <transf name="introduce_premises" >
      <goal name="VC compile_bexpr.3.0.1.0.0">
      <transf name="compute_specified" >
       <goal name="VC compile_bexpr.3.0.1.0.0.0">
       <proof prover="0"><result status="valid" time="0.29" steps="440"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_bexpr.3.1">
   <transf name="split_goal_right" >
    <goal name="VC compile_bexpr.3.1.0">
    <transf name="compute_specified" >
     <goal name="VC compile_bexpr.3.1.0.0">
     <transf name="introduce_premises" >
      <goal name="VC compile_bexpr.3.1.0.0.0">
      <transf name="compute_specified" >
       <goal name="VC compile_bexpr.3.1.0.0.0.0">
       <proof prover="0"><result status="valid" time="0.31" steps="440"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC compile_bexpr.3.1.1">
    <transf name="compute_specified" >
     <goal name="VC compile_bexpr.3.1.1.0">
     <transf name="introduce_premises" >
      <goal name="VC compile_bexpr.3.1.1.0.0">
      <transf name="compute_specified" >
       <goal name="VC compile_bexpr.3.1.1.0.0.0">
       <proof prover="0"><result status="valid" time="0.19" steps="491"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_bexpr.3.2">
   <transf name="compute_specified" >
    <goal name="VC compile_bexpr.3.2.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_bexpr.3.2.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_bexpr.3.2.0.0.0">
      <proof prover="0"><result status="valid" time="0.53" steps="877"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_bexpr.3.3">
   <transf name="compute_specified" >
    <goal name="VC compile_bexpr.3.3.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_bexpr.3.3.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_bexpr.3.3.0.0.0">
      <proof prover="0"><result status="valid" time="1.51" steps="2765"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_bexpr.3.4">
   <transf name="compute_specified" >
    <goal name="VC compile_bexpr.3.4.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_bexpr.3.4.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_bexpr.3.4.0.0.0">
      <proof prover="0"><result status="valid" time="1.57" steps="2901"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_bexpr.3.5">
   <transf name="compute_specified" >
    <goal name="VC compile_bexpr.3.5.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_bexpr.3.5.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_bexpr.3.5.0.0.0">
      <proof prover="0"><result status="valid" time="0.71" steps="1536"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC compile_bexpr.4">
  <proof prover="0"><result status="valid" time="0.18" steps="160"/></proof>
  </goal>
  <goal name="VC compile_bexpr.5">
  <proof prover="0"><result status="valid" time="0.17" steps="160"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compile_bexpr_natural">
 <transf name="split_goal_right" >
  <goal name="VC compile_bexpr_natural.0">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.22" steps="383"/></proof>
  </goal>
  <goal name="VC compile_bexpr_natural.1">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.28" steps="456"/></proof>
  </goal>
  <goal name="VC compile_bexpr_natural.2">
  <transf name="split_goal_right" >
   <goal name="VC compile_bexpr_natural.2.0">
   <proof prover="0" memlimit="2000"><result status="valid" time="0.31" steps="681"/></proof>
   </goal>
   <goal name="VC compile_bexpr_natural.2.1">
   <proof prover="0" memlimit="2000"><result status="valid" time="0.29" steps="679"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Compile_bexpr">
 <goal name="VC compile_bexpr">
 <transf name="split_goal_right" >
  <goal name="VC compile_bexpr.0">
  <proof prover="0"><result status="valid" time="0.28" steps="436"/></proof>
  </goal>
  <goal name="VC compile_bexpr.1">
  <proof prover="0"><result status="valid" time="0.22" steps="442"/></proof>
  </goal>
  <goal name="VC compile_bexpr.2">
  <proof prover="0"><result status="valid" time="0.25" steps="521"/></proof>
  </goal>
  <goal name="VC compile_bexpr.3">
  <transf name="split_goal_right" >
   <goal name="VC compile_bexpr.3.0">
   <transf name="split_goal_right" >
    <goal name="VC compile_bexpr.3.0.0">
    <transf name="compute_specified" >
     <goal name="VC compile_bexpr.3.0.0.0">
     <transf name="introduce_premises" >
      <goal name="VC compile_bexpr.3.0.0.0.0">
      <transf name="compute_specified" >
       <goal name="VC compile_bexpr.3.0.0.0.0.0">
       <proof prover="0"><result status="valid" time="0.13" steps="455"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC compile_bexpr.3.0.1">
    <transf name="compute_specified" >
     <goal name="VC compile_bexpr.3.0.1.0">
     <transf name="introduce_premises" >
      <goal name="VC compile_bexpr.3.0.1.0.0">
      <transf name="compute_specified" >
       <goal name="VC compile_bexpr.3.0.1.0.0.0">
       <proof prover="0"><result status="valid" time="0.28" steps="424"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_bexpr.3.1">
   <transf name="split_goal_right" >
    <goal name="VC compile_bexpr.3.1.0">
    <transf name="compute_specified" >
     <goal name="VC compile_bexpr.3.1.0.0">
     <transf name="introduce_premises" >
      <goal name="VC compile_bexpr.3.1.0.0.0">
      <transf name="compute_specified" >
       <goal name="VC compile_bexpr.3.1.0.0.0.0">
       <proof prover="0"><result status="valid" time="0.19" steps="424"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
    <goal name="VC compile_bexpr.3.1.1">
    <transf name="compute_specified" >
     <goal name="VC compile_bexpr.3.1.1.0">
     <transf name="introduce_premises" >
      <goal name="VC compile_bexpr.3.1.1.0.0">
      <transf name="compute_specified" >
       <goal name="VC compile_bexpr.3.1.1.0.0.0">
       <proof prover="0"><result status="valid" time="0.20" steps="464"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_bexpr.3.2">
   <transf name="split_goal_right" >
    <goal name="VC compile_bexpr.3.2.0">
    <transf name="compute_specified" >
     <goal name="VC compile_bexpr.3.2.0.0">
     <transf name="introduce_premises" >
      <goal name="VC compile_bexpr.3.2.0.0.0">
      <transf name="compute_specified" >
       <goal name="VC compile_bexpr.3.2.0.0.0.0">
       <proof prover="0"><result status="valid" time="0.40" steps="855"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_bexpr.3.3">
   <transf name="compute_specified" >
    <goal name="VC compile_bexpr.3.3.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_bexpr.3.3.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_bexpr.3.3.0.0.0">
      <proof prover="0"><result status="valid" time="0.85" steps="1630"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_bexpr.3.4">
   <transf name="compute_specified" >
    <goal name="VC compile_bexpr.3.4.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_bexpr.3.4.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_bexpr.3.4.0.0.0">
      <proof prover="0"><result status="valid" time="0.85" steps="1618"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_bexpr.3.5">
   <transf name="compute_specified" >
    <goal name="VC compile_bexpr.3.5.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_bexpr.3.5.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_bexpr.3.5.0.0.0">
      <proof prover="0"><result status="valid" time="0.78" steps="1336"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC compile_bexpr.4">
  <proof prover="0"><result status="valid" time="0.08" steps="160"/></proof>
  </goal>
  <goal name="VC compile_bexpr.5">
  <proof prover="0"><result status="valid" time="0.18" steps="160"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compile_bexpr_natural">
 <transf name="split_vc" >
  <goal name="VC compile_bexpr_natural.0">
  <proof prover="0"><result status="valid" time="0.22" steps="383"/></proof>
  </goal>
  <goal name="VC compile_bexpr_natural.1">
  <proof prover="0"><result status="valid" time="0.34" steps="550"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Compile_aexpr_reg">
 <goal name="VC compile_aexpr">
 <transf name="split_goal_right" >
  <goal name="VC compile_aexpr.0">
  <proof prover="0"><result status="valid" time="0.25" steps="515"/></proof>
  </goal>
  <goal name="VC compile_aexpr.1">
  <proof prover="0"><result status="valid" time="0.24" steps="560"/></proof>
  </goal>
  <goal name="VC compile_aexpr.2">
  <proof prover="0"><result status="valid" time="0.27" steps="516"/></proof>
  </goal>
  <goal name="VC compile_aexpr.3">
  <proof prover="0"><result status="valid" time="0.26" steps="561"/></proof>
  </goal>
  <goal name="VC compile_aexpr.4">
  <proof prover="0"><result status="valid" time="0.29" steps="515"/></proof>
  </goal>
  <goal name="VC compile_aexpr.5">
  <proof prover="0"><result status="valid" time="0.32" steps="560"/></proof>
  </goal>
  <goal name="VC compile_aexpr.6">
  </goal>
  <goal name="VC compile_aexpr.7">
  </goal>
  <goal name="VC compile_aexpr.8">
  <transf name="split_goal_right" >
   <goal name="VC compile_aexpr.8.0">
   <transf name="compute_specified" >
    <goal name="VC compile_aexpr.8.0.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_aexpr.8.0.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_aexpr.8.0.0.0.0">
      <proof prover="0"><result status="valid" time="0.17" steps="587"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_aexpr.8.1">
   <transf name="compute_specified" >
    <goal name="VC compile_aexpr.8.1.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_aexpr.8.1.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_aexpr.8.1.0.0.0">
      <proof prover="0"><result status="valid" time="0.35" steps="515"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_aexpr.8.2">
   <transf name="compute_specified" >
    <goal name="VC compile_aexpr.8.2.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_aexpr.8.2.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_aexpr.8.2.0.0.0">
      <proof prover="0"><result status="valid" time="1.20" steps="1930"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_aexpr.8.3">
   <transf name="compute_specified" >
    <goal name="VC compile_aexpr.8.3.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_aexpr.8.3.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_aexpr.8.3.0.0.0">
      <proof prover="4" memlimit="1000"><result status="valid" time="1.35"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_aexpr.8.4">
   <transf name="compute_specified" >
    <goal name="VC compile_aexpr.8.4.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_aexpr.8.4.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_aexpr.8.4.0.0.0">
      <proof prover="0"><result status="valid" time="1.29" steps="1930"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_aexpr.8.5">
   </goal>
  </transf>
  </goal>
  <goal name="VC compile_aexpr.9">
  <proof prover="0"><result status="valid" time="0.18" steps="160"/></proof>
  </goal>
  <goal name="VC compile_aexpr.10">
  <proof prover="0"><result status="valid" time="0.18" steps="160"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compile_aexpr_natural">
 <transf name="split_goal_right" >
  <goal name="VC compile_aexpr_natural.0">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.08" steps="158"/></proof>
  </goal>
  <goal name="VC compile_aexpr_natural.1">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.22" steps="381"/></proof>
  </goal>
  <goal name="VC compile_aexpr_natural.2">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.28" steps="528"/></proof>
  </goal>
  <goal name="VC compile_aexpr_natural.3">
  <proof prover="0" memlimit="2000"><result status="valid" time="0.39" steps="688"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Compile_com_reg">
 <goal name="loop_variant_lemma">
 <proof prover="0"><result status="valid" time="0.24" steps="434"/></proof>
 </goal>
 <goal name="loop_variant_acc">
 <transf name="split_goal_right" >
  <goal name="loop_variant_acc.0">
  <proof prover="0"><result status="valid" time="0.25" steps="494"/></proof>
  </goal>
  <goal name="loop_variant_acc.1">
  <proof prover="2" timelimit="10" obsolete="true"><result status="timeout" time="17.00"/></proof>
  </goal>
  <goal name="loop_variant_acc.2">
  <transf name="induction_pr" >
   <goal name="loop_variant_acc.2.0">
   <proof prover="0"><result status="valid" time="0.21" steps="164"/></proof>
   </goal>
   <goal name="loop_variant_acc.2.1">
   <proof prover="0"><result status="valid" time="0.28" steps="164"/></proof>
   </goal>
   <goal name="loop_variant_acc.2.2">
   <proof prover="0"><result status="valid" time="0.25" steps="170"/></proof>
   </goal>
   <goal name="loop_variant_acc.2.3">
   <proof prover="0"><result status="valid" time="0.24" steps="169"/></proof>
   </goal>
   <goal name="loop_variant_acc.2.4">
   <proof prover="0"><result status="valid" time="0.27" steps="169"/></proof>
   </goal>
   <goal name="loop_variant_acc.2.5">
   <transf name="compute_specified" >
    <goal name="loop_variant_acc.2.5.0">
    <transf name="introduce_premises" >
     <goal name="loop_variant_acc.2.5.0.0">
     <transf name="apply" arg1="Acc">
      <goal name="loop_variant_acc.2.5.0.0.0">
      <transf name="compute_specified" >
       <goal name="loop_variant_acc.2.5.0.0.0.0">
       <transf name="introduce_premises" >
        <goal name="loop_variant_acc.2.5.0.0.0.0.0">
        <proof prover="2" timelimit="10" obsolete="true"><result status="timeout" time="10.00"/></proof>
        </goal>
       </transf>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="loop_variant_acc.2.6">
   <transf name="compute_specified" >
    <goal name="loop_variant_acc.2.6.0">
    <transf name="introduce_premises" >
     <goal name="loop_variant_acc.2.6.0.0">
     <proof prover="4" timelimit="5"><result status="valid" time="0.55"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC compile_com">
 <transf name="split_goal_right" >
  <goal name="VC compile_com.0">
  <proof prover="0"><result status="valid" time="0.26" steps="440"/></proof>
  </goal>
  <goal name="VC compile_com.1">
  <proof prover="0"><result status="valid" time="0.26" steps="481"/></proof>
  </goal>
  <goal name="VC compile_com.2">
  <proof prover="0"><result status="valid" time="0.33" steps="446"/></proof>
  </goal>
  <goal name="VC compile_com.3">
  <proof prover="0"><result status="valid" time="0.20" steps="495"/></proof>
  </goal>
  <goal name="VC compile_com.4">
  <proof prover="0"><result status="valid" time="0.32" steps="441"/></proof>
  </goal>
  <goal name="VC compile_com.5">
  <transf name="split_goal_right" >
   <goal name="VC compile_com.5.0">
   <transf name="compute_specified" >
    <goal name="VC compile_com.5.0.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_com.5.0.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_com.5.0.0.0.0">
      <proof prover="0"><result status="valid" time="0.14" steps="412"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_com.5.1">
   <transf name="compute_specified" >
    <goal name="VC compile_com.5.1.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_com.5.1.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_com.5.1.0.0.0">
      <transf name="split_goal_right" >
       <goal name="VC compile_com.5.1.0.0.0.0">
       <proof prover="0"><result status="valid" time="0.10" steps="174"/></proof>
       </goal>
       <goal name="VC compile_com.5.1.0.0.0.1">
       <proof prover="0"><result status="valid" time="0.22" steps="197"/></proof>
       </goal>
       <goal name="VC compile_com.5.1.0.0.0.2">
       <proof prover="0"><result status="valid" time="0.21" steps="207"/></proof>
       </goal>
       <goal name="VC compile_com.5.1.0.0.0.3">
       <proof prover="0"><result status="valid" time="0.21" steps="207"/></proof>
       </goal>
       <goal name="VC compile_com.5.1.0.0.0.4">
       <proof prover="0"><result status="valid" time="0.27" steps="461"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_com.5.2">
   <transf name="compute_specified" >
    <goal name="VC compile_com.5.2.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_com.5.2.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_com.5.2.0.0.0">
      <transf name="split_goal_right" >
       <goal name="VC compile_com.5.2.0.0.0.0">
       <proof prover="0"><result status="valid" time="0.12" steps="172"/></proof>
       </goal>
       <goal name="VC compile_com.5.2.0.0.0.1">
       <proof prover="0"><result status="valid" time="0.31" steps="565"/></proof>
       </goal>
       <goal name="VC compile_com.5.2.0.0.0.2">
       <proof prover="0"><result status="valid" time="0.19" steps="194"/></proof>
       </goal>
       <goal name="VC compile_com.5.2.0.0.0.3">
       <proof prover="2" timelimit="10"><result status="valid" time="0.06"/></proof>
       </goal>
       <goal name="VC compile_com.5.2.0.0.0.4">
       <proof prover="0"><result status="valid" time="0.21" steps="220"/></proof>
       </goal>
       <goal name="VC compile_com.5.2.0.0.0.5">
       <proof prover="0"><result status="valid" time="0.11" steps="220"/></proof>
       </goal>
       <goal name="VC compile_com.5.2.0.0.0.6">
       <proof prover="0"><result status="valid" time="0.11" steps="222"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_com.5.3">
   <transf name="compute_specified" >
    <goal name="VC compile_com.5.3.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_com.5.3.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_com.5.3.0.0.0">
      <proof prover="0" memlimit="2000"><result status="valid" time="1.42" steps="1916"/></proof>
      <transf name="split_goal_right" >
       <goal name="VC compile_com.5.3.0.0.0.0">
       <proof prover="0"><result status="valid" time="0.26" steps="198"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.1">
       <proof prover="0"><result status="valid" time="0.20" steps="218"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.2">
       <proof prover="0"><result status="valid" time="0.20" steps="218"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.3">
       <proof prover="0"><result status="valid" time="0.21" steps="218"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.4">
       <proof prover="0"><result status="valid" time="0.21" steps="228"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.5">
       <proof prover="0"><result status="valid" time="2.12" steps="3357"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.6">
       <proof prover="0"><result status="valid" time="0.21" steps="252"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.7">
       <proof prover="0"><result status="valid" time="0.22" steps="252"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.8">
       <proof prover="0"><result status="valid" time="0.19" steps="257"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.9">
       <proof prover="0"><result status="valid" time="0.20" steps="224"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.10">
       <proof prover="0"><result status="valid" time="0.54" steps="852"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.11">
       <proof prover="0"><result status="valid" time="0.15" steps="246"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.12">
       <proof prover="0"><result status="valid" time="0.20" steps="263"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.13">
       <proof prover="0"><result status="valid" time="0.21" steps="263"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.14">
       <proof prover="0"><result status="valid" time="0.22" steps="263"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.15">
       <proof prover="0"><result status="valid" time="0.15" steps="252"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.16">
       <proof prover="0"><result status="valid" time="0.16" steps="252"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.17">
       <proof prover="0"><result status="valid" time="0.15" steps="252"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.18">
       <proof prover="0"><result status="valid" time="0.25" steps="252"/></proof>
       </goal>
       <goal name="VC compile_com.5.3.0.0.0.19">
       <proof prover="0"><result status="valid" time="0.22" steps="252"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="VC compile_com.5.4">
   <transf name="compute_specified" >
    <goal name="VC compile_com.5.4.0">
    <transf name="introduce_premises" >
     <goal name="VC compile_com.5.4.0.0">
     <transf name="compute_specified" >
      <goal name="VC compile_com.5.4.0.0.0">
      <transf name="split_goal_right" >
       <goal name="VC compile_com.5.4.0.0.0.0">
       <proof prover="0"><result status="valid" time="0.23" steps="200"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.1">
       <proof prover="0"><result status="valid" time="0.21" steps="208"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.2">
       <proof prover="0"><result status="valid" time="0.09" steps="208"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.3">
       <proof prover="0"><result status="valid" time="0.27" steps="488"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.4">
       <proof prover="0"><result status="valid" time="0.35" steps="521"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.5">
       <proof prover="0"><result status="valid" time="0.22" steps="250"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.6">
       <proof prover="0"><result status="valid" time="0.16" steps="271"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.7">
       <proof prover="0"><result status="valid" time="0.22" steps="271"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.8">
       <proof prover="0"><result status="valid" time="0.11" steps="271"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.9">
       <proof prover="0"><result status="valid" time="0.11" steps="271"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.10">
       <proof prover="0"><result status="valid" time="0.23" steps="271"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.11">
       <proof prover="0"><result status="valid" time="0.23" steps="279"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.12">
       <proof prover="0"><result status="valid" time="2.17" steps="4513"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.13">
       <proof prover="0"><result status="valid" time="0.24" steps="303"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.14">
       <proof prover="0"><result status="valid" time="0.32" steps="313"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.15">
       <proof prover="0"><result status="valid" time="0.27" steps="313"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.16">
       <proof prover="0" memlimit="2000" obsolete="true"><undone/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.17">
       <proof prover="0"><result status="valid" time="0.33" steps="331"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.18">
       <proof prover="0"><result status="valid" time="0.24" steps="329"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.19">
       <proof prover="0"><result status="valid" time="0.10" steps="248"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.20">
       <proof prover="0"><result status="valid" time="0.19" steps="277"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.21">
       <proof prover="0"><result status="valid" time="0.15" steps="277"/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.22">
       <proof prover="0" obsolete="true"><undone/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.23">
       <proof prover="0" obsolete="true"><undone/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.24">
       <proof prover="0" obsolete="true"><undone/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.25">
       <proof prover="0" obsolete="true"><undone/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.26">
       <proof prover="0" obsolete="true"><undone/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.27">
       <proof prover="0" obsolete="true"><undone/></proof>
       </goal>
       <goal name="VC compile_com.5.4.0.0.0.28">
       <proof prover="0" obsolete="true"><undone/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC compile_com.6">
  <proof prover="0" obsolete="true"><undone/></proof>
  </goal>
  <goal name="VC compile_com.7">
  <proof prover="0" obsolete="true"><undone/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compile_com_natural">
 <transf name="split_goal_right" >
  <goal name="VC compile_com_natural.0">
  <transf name="compute_specified" >
   <goal name="VC compile_com_natural.0.0">
   <transf name="introduce_premises" >
    <goal name="VC compile_com_natural.0.0.0">
    <transf name="compute_specified" >
     <goal name="VC compile_com_natural.0.0.0.0">
     <proof prover="0" memlimit="2000" obsolete="true"><undone/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="VC compile_com_natural.1">
  <proof prover="0" memlimit="2000" obsolete="true"><undone/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compile_program">
 <transf name="split_goal_right" >
  <goal name="VC compile_program.0">
  <proof prover="0" memlimit="2000" obsolete="true"><undone/></proof>
  </goal>
  <goal name="VC compile_program.1">
  <proof prover="2" timelimit="10" memlimit="2000" obsolete="true"><undone/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
<file name="../bv_op.mlw">
<theory name="BV_OP">
 <goal name="VC bv_add" expl="VC for bv_add" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.00" steps="138"/></proof>
 </goal>
 <goal name="VC bv_sub" expl="VC for bv_sub">
 </goal>
</theory>
</file>
<file name="../imp.mlw" proved="true">
<theory name="Imp" proved="true">
 <goal name="ceval_deterministic_aux" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="ceval_deterministic_aux.0" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.14" steps="465"/></proof>
  </goal>
  <goal name="ceval_deterministic_aux.1" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.15" steps="524"/></proof>
  </goal>
  <goal name="ceval_deterministic_aux.2" proved="true">
  <transf name="simplify_trivial_quantification_in_goal" proved="true" >
   <goal name="ceval_deterministic_aux.2.0" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.22" steps="722"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ceval_deterministic_aux.3" proved="true">
  <transf name="simplify_trivial_quantification_in_goal" proved="true" >
   <goal name="ceval_deterministic_aux.3.0" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.19" steps="613"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ceval_deterministic_aux.4" proved="true">
  <transf name="simplify_trivial_quantification_in_goal" proved="true" >
   <goal name="ceval_deterministic_aux.4.0" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.17" steps="671"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="ceval_deterministic_aux.5" proved="true">
  <proof prover="0" timelimit="5"><result status="valid" time="0.16" steps="501"/></proof>
  </goal>
  <goal name="ceval_deterministic_aux.6" proved="true">
  <transf name="simplify_trivial_quantification_in_goal" proved="true" >
   <goal name="ceval_deterministic_aux.6.0" proved="true">
   <proof prover="0" timelimit="5"><result status="valid" time="0.21" steps="805"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="ceval_deterministic" proved="true">
 <proof prover="0" timelimit="5"><result status="valid" time="0.12" steps="374"/></proof>
 </goal>
</theory>
</file>
</why3session>
